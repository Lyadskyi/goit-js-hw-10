{"version":3,"file":"commonHelpers.js","sources":["../src/img/x-octagon.svg","../src/js/1-timer.js"],"sourcesContent":["export default \"__VITE_ASSET__655c9695__\"","// Описаний в документації\nimport flatpickr from \"flatpickr\";\n// Додатковий імпорт стилів\nimport \"flatpickr/dist/flatpickr.min.css\";\n// Описаний у документації\nimport iziToast from \"izitoast\";\n// Додатковий імпорт стилів\nimport \"izitoast/dist/css/iziToast.min.css\";\n// Додатковий імпорт стилів для помилки\nimport iconError from '../img/x-octagon.svg';\n\n\nconst datetimePicker = document.querySelector('#datetime-picker');\nconst btnStart = document.querySelector('button');\nconst value = document.querySelectorAll('.value');\n\nlet userInputDate;\n\nbtnStart.disabled = true;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose([selectedDates]) {\n    if (selectedDates < options.defaultDate) {\n      iziToast.error({\n        title: 'Error',\n        titleColor: '#fff',\n        titleSize: '16px',\n        titleLineHeight: '1.5',\n        message: \"Please choose a date in the future\",\n        messageColor: '#fff',\n        messageSize: '16px',\n        messageLineHeight: '1.5',\n        backgroundColor: '#B51B1B',\n        theme: 'dark',\n        icon: icon,\n        iconUrl: iconError,\n        position: 'topRight',\n      });\n      btnStart.disabled = true;\n    } else {\n      btnStart.disabled = false;\n      userInputDate = selectedDates.getTime();\n    }\n  },\n};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// flatpickr(selector, options);\n\n// function addLeadingZero(value) {\n//   return value.padStart(2, '0');\n// }\n\n// btnStart.addEventListener('click', () => {\n//   selector.disabled = true;\n//   btnStart.disabled = true;\n//   function timer() {\n//     const time = Date.parse(userSelectedDate) - Date.parse(new Date());\n//     const days = convertMs(time).days;\n//     const hours = convertMs(time).hours;\n//     const minutes = convertMs(time).minutes;\n//     const seconds = convertMs(time).seconds;\n//     if (time <= 0) {\n//       clearInterval(intervalId);\n//       selector.disabled = false;\n//     }\n//     value[0].textContent = addLeadingZero(days.toString());\n//     value[1].textContent = addLeadingZero(hours.toString());\n//     value[2].textContent = addLeadingZero(minutes.toString());\n//     value[3].textContent = addLeadingZero(seconds.toString());\n//   }\n//   const intervalId = setInterval(timer, 1000);\n// });\n\n\n\n\n\n\n\n\n\n\n\n\n\n// function convertMs(ms) {\n//   // Number of milliseconds per unit of time\n//   const second = 1000;\n//   const minute = second * 60;\n//   const hour = minute * 60;\n//   const day = hour * 24;\n\n//   // Remaining days\n//   const days = Math.floor(ms / day);\n//   // Remaining hours\n//   const hours = Math.floor((ms % day) / hour);\n//   // Remaining minutes\n//   const minutes = Math.floor(((ms % day) % hour) / minute);\n//   // Remaining seconds\n//   const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n//   return { days, hours, minutes, seconds };\n// }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nflatpickr(datetimePicker, options);\n\nbtnStart.addEventListener('click', handleStartButtonClick);\n\nfunction handleStartButtonClick() {\n  if (userInputDate > Date.now()) {\n    const timerCalc = () => {\n      updateData(\n        [dataDays, dataHours, dataMinutes, dataSeconds],\n        convertMs(userInputDate - Date.now())\n      );\n      if (\n        userInputDate - 1000 < Date.now() &&\n        dataSeconds.textContent === '00'\n      )\n        clearInterval(interval);\n    };\n    timerCalc();\n    const interval = setInterval(timerCalc, 1000);\n    btnStart.disabled = true;\n    datetimePicker.disabled = true;\n    // btnStart.dataset.start = 'started';\n  } else {\n    iziToast.show({\n      message: 'Please choose a date in the future',\n      backgroundColor: 'rgb(236, 56, 56)',\n      messageColor: '#FFF',\n      position: 'topCenter',\n    });\n    btnStart.disabled = true;\n  }\n};\n\nconst addLeadingZero = (output, time) => {\n  output.textContent = time.toString().padStart(2, '0');\n};\nconst updateData = (\n  [dataDays, dataHours, dataMinutes, dataSeconds],\n  { days, hours, minutes, seconds }\n) => {\n  addLeadingZero(dataDays, days);\n  addLeadingZero(dataHours, hours);\n  addLeadingZero(dataMinutes, minutes);\n  addLeadingZero(dataSeconds, seconds);\n};\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nconsole.log(convertMs(2000)); // {days: 0, hours: 0, minutes: 0, seconds: 2}\nconsole.log(convertMs(140000)); // {days: 0, hours: 0, minutes: 2, seconds: 20}\nconsole.log(convertMs(24140000)); // {days: 0, hours: 6 minutes: 42, seconds: 20}\n\n\n\n// 1. Завдання вирішено правильно\n\n// Добре виконані моменти:\n\n// Гарно організовані імпорти для flatpickr та izitoast, зокрема відповідних CSS-файлів, у відповідності з інструкціями завдання.\n// Відповідне використання сучасних JavaScript-селекторів для вибору елементів DOM.\n// Використання деструктуризації об'єкта для вилучення значень у функції updateData підтримує читабельність коду.\n// Функція addLeadingZero є актураною реалізацією для форматування значень таймера, тут правильно застосовано padStart.\n// Функція convertMs реалізована вірно, ідеально узгоджується з вимогами завдання.\n// Покращення:\n\n// У змінної datatimePicker опечатка; має бути datetimePicker.\n// Додавання кольору фону безпосередньо в виклику iziToast.show() не є необхідним, оскільки бібліотека iziToast уже має стандартний\n// стиль помилки, який може бути використаний, викликавши iziToast.error().\n// Конвенцію іменування handlerBtnStart можна покращити для читабельності, можливо, на щось на зразок handleStartButtonClick.\n// Використання властивості dataset (btnStart.dataset.start) є непотрібним і не вносить вклад у виконання завдання.\n// Управління станом має бути внутрішнім для ваших JavaScript - функцій, а не використовувати data - атрибути.\n// Конфігурація iziToast для вибору минулої дати має бути узгодженою з відображеною помилкою; або використовуйте iziToast.error(),\n// або забезпечте узгоджену візуальну відповідь, використовуючи iziToast.show() зі стилем помилок для обох випадків,\n// коли помилка передається користувачеві.\n// Існує неузгодженість із використанням iziToast.show() у методах onClose та handlerBtnStart; буде краще, якщо конфігурація буде\n// узгодженою по всьому коду.\n// Слід розглянути можливість відключення обирача дати одразу після початку зворотного відліку, щоб уникнути плутанини або\n// необхідності перезавантаження сторінки для вибору нової дати, як зазначено у вимогах завдання.\n// Підсумки, як тільки критичні помилки будуть усунуті, особливо забезпечуючи правильне використання об'єктів Date та їх порівняння,\n// функціональність стане більш точно узгодженою з вимогами завдання.Також важливо підтримувати узгодженість у зворотному зв'язку UI\n// та чітких конвенціях іменування для кращої читабельності та користування скриптом."],"names":["iconError","datetimePicker","btnStart","userInputDate","options","selectedDates","iziToast","flatpickr","handleStartButtonClick","timerCalc","updateData","convertMs","interval","addLeadingZero","output","time","dataDays","dataHours","dataMinutes","dataSeconds","days","hours","minutes","seconds","ms"],"mappings":"2FAAA,MAAeA,EAAA,+CCYTC,EAAiB,SAAS,cAAc,kBAAkB,EAC1DC,EAAW,SAAS,cAAc,QAAQ,EAClC,SAAS,iBAAiB,QAAQ,EAEhD,IAAIC,EAEJD,EAAS,SAAW,GAEpB,MAAME,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQ,CAACC,CAAa,EAAG,CACnBA,EAAgBD,EAAQ,aAC1BE,EAAS,MAAM,CACb,MAAO,QACP,WAAY,OACZ,UAAW,OACX,gBAAiB,MACjB,QAAS,qCACT,aAAc,OACd,YAAa,OACb,kBAAmB,MACnB,gBAAiB,UACjB,MAAO,OACP,KACA,QAASN,EACT,SAAU,UAClB,CAAO,EACDE,EAAS,SAAW,KAEpBA,EAAS,SAAW,GACpBC,EAAgBE,EAAc,UAEjC,CACH,EA2FAE,EAAUN,EAAgBG,CAAO,EAEjCF,EAAS,iBAAiB,QAASM,CAAsB,EAEzD,SAASA,GAAyB,CAChC,GAAIL,EAAgB,KAAK,MAAO,CAC9B,MAAMM,EAAY,IAAM,CACtBC,EACE,CAAC,SAAU,UAAW,YAAa,WAAW,EAC9CC,EAAUR,EAAgB,KAAK,KAAK,CAC5C,EAEQA,EAAgB,IAAO,KAAK,IAAK,GACjC,YAAY,cAAgB,MAE5B,cAAcS,CAAQ,CAC9B,EACIH,IACA,MAAMG,EAAW,YAAYH,EAAW,GAAI,EAC5CP,EAAS,SAAW,GACpBD,EAAe,SAAW,EAE9B,MACIK,EAAS,KAAK,CACZ,QAAS,qCACT,gBAAiB,mBACjB,aAAc,OACd,SAAU,WAChB,CAAK,EACDJ,EAAS,SAAW,EAExB,CAEA,MAAMW,EAAiB,CAACC,EAAQC,IAAS,CACvCD,EAAO,YAAcC,EAAK,SAAU,EAAC,SAAS,EAAG,GAAG,CACtD,EACML,EAAa,CACjB,CAACM,EAAUC,EAAWC,EAAaC,CAAW,EAC9C,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAS,IAC9B,CACHV,EAAeG,EAAUI,CAAI,EAC7BP,EAAeI,EAAWI,CAAK,EAC/BR,EAAeK,EAAaI,CAAO,EACnCT,EAAeM,EAAaI,CAAO,CACrC,EAEA,SAASZ,EAAUa,EAAI,CAQrB,MAAMJ,EAAO,KAAK,MAAMI,EAAK,KAAG,EAE1BH,EAAQ,KAAK,MAAOG,EAAK,MAAO,IAAI,EAEpCF,EAAU,KAAK,MAAQE,EAAK,MAAO,KAAQ,GAAM,EAEjDD,EAAU,KAAK,MAASC,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAJ,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,QAAQ,IAAIZ,EAAU,GAAI,CAAC,EAC3B,QAAQ,IAAIA,EAAU,IAAM,CAAC,EAC7B,QAAQ,IAAIA,EAAU,MAAQ,CAAC"}